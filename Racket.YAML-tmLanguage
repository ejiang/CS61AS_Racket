---
  name: Racket
  scopeName: source.racket
  fileTypes: [rkt]
  patterns: 
    - 
      name: string.quoted.double.source.racket
      begin: \"
      end: \"
    - 
      name: string.quoted.double.source.racket
      begin: ('\(|'\[)
      end: (\)|\])
    - 
      name: meta.variable.source.racket
      match: \((define)\s+([a-zA-Z0-9_\-?\+^]+)\s*
      captures: 
        '1':  {name: keyword.source.racket}
        '2': {name: entity.name.variable.source.racket}
    -
      name: meta.method.racket
      begin: \((define)\s+\(([a-zA-Z0-9_\-?\+^]+)\s+
      beginCaptures:
        '1': {name: keyword.source.racket}
        '2': {name: entity.name.function.racket}
      end: \)
      patterns:
        - name: variable.parameter.racket
          match: (\w|\-|\d)+
          captures:
            '1': {name: variable.parameter.racket}
    - 
      name: meta.keywords.source.racket
      match: \b(if|lambda|cond|define|type-case|let|letrec|let!|\#lang|require|test|else|first|butfirst|bf|last|butlast|bl|rest|define-type|define-type-alias|define-struct|not|local|error|super-new|define/public|init|define/private|send|new|let\*|class)[\s\)]
      captures: 
        '1': {name: keyword.source.racket}
    - 
      name: constant.language.source.racket
      match: \b(true|false|empty|cons|car|cdr|caar|cadr|cdar|cddr|caaar|caadr|cadar|caddr|cdaar|cdadr|cddar|cdddr|caaaar|caaadr|caadar|caaddr|cadaar|cadadr|caddar|cadddr|cdaaar|cdaadr|cdadar|cdaddr|cddaar|cddadr|cdddar|cddddr)[\s\)]
    - 
      name: constant.numeric.integer.source.racket
      match: \b(0|([1-9][0-9_]*))\b
    - 
      name: comment.line.documentation.source.racket
      begin: \;
      end: $\n
    - 
      name: string.quoted.double.source.racket
      match: \'[\d\w\-?!]+
    - 
      name: comment.line.documentation.source.racket
      begin: \#\|
      end: \|\#
    - 
      name: storage.type.racket
      match: ([\w]+\%)
  
